<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper.dtd -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.java.emp.mapper.EmpMapper">

	<!-- 전체조회 -->
	<select id="getEmpList" resultType="com.yedam.java.emp.domain.Emp">
		select * from employees
	</select>
	
	<!-- 단건조회 -->
	<select id="getEmp" parameterType="com.yedam.java.emp.domain.Emp" resultType="com.yedam.java.emp.domain.Emp">
		select *
		from employees 
		where employee_id = #{employeeId}
	</select>
	
	<!-- 등록 -->
	<insert id="insertEmp" parameterType="Emp">
		<!-- order : insert or update 전에 할것인지(before), 후에 할 것인지(after) 결정 -->
		<!-- keyProperty 아래 sql 문의 반환값을 parameter인 Emp 안의 employeeId 에 담음 -->
		<!--  
		<selectKey keyProperty="employeeId" resultType="String" order="BEFORE">
			 아래 sql 의 값은 하나만 존재해야함 
			select max(employee_id) + 1 from employees
		</selectKey>
		-->
		insert into employees (employee_id, first_name, last_name, email, hire_date, job_id, salary)
		values (#{employeeId}, #{firstName}, #{lastName}, #{email}, sysdate, #{jobId}, #{salary} )
	</insert>
	
	<!-- 수정 - 연봉 10% 인상 -->
	<update id="updateSalary">
		update employees set salary = salary * 1.1
		where employee_id = #{empId}
	</update>
	
	<!-- 수정 - 사원정보를 넘겨받아서 이름과 성, 이메일을 수정할 수 있는 메서드 -->
	<update id="updateEmpInfo" parameterType="Emp">
		update employees 
		<set>
	        <if test="lastName != null">last_name = #{lastName},</if>
	        <if test="firstName != null">first_name = #{firstName},</if>
	        <if test="email != null">email = #{email},</if>
   		</set>
		where employee_id = #{employeeId}
	</update>
	
	<!-- 삭제 - id -->
	<delete id="deleteEmp">
		delete from employees
		where employee_id = #{empId}
	</delete>
	
	
	
</mapper>